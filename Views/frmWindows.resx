<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAwVJREFUWEe1lyFUG0EQhhEIRERFRQUSgUAgEBWIikoEAolEVFYgKnmvogKBQCAQ
        CAQiAoFAIBAIBAKBQCIQCAQCUcF7Sb/v8qdQkguXO/q/9+c2M7Mzu3u7s3MT46Db7c53Op2f8BCew5vw
        Ah7BTWwWY/4+wOEU3MD5Lc8uzyd4DU/gXngMr+Dv2NxDB/MhbuoBJ2vwLk6d9SrNj1EPAF0LmxV4AB3o
        A1xHPhmTaoijNk8Dn8KFqCqDPjPwsO+Dx6eoRkNDOlxCZ/At4trAhyvyCG/wPRvxcGDgzA3+QPtrxI2B
        LzfvHXQfla8EBm349J7B+8DvHHQlzvE/uCdQrKHwfTVe9jLge8kYYCOiHhBMoXSJTiP6byCGx9bj+vwq
        HJHDQlFpt2M63rF6AWJMOwC4G1EhvIWH+TsSBHejnvH8EtHYoP82dBVaxQ6Fzn41+lJgNomdKXc/olrA
        z6IxwbKjMbe780szXB8Ghiao2q9A2B8/put9nZpir6MrBTZb0KWfiqgR8OX9cWnDW+0k8qFA/x1eELwV
        UWPgbxfe2fA63Yt8AOi8gNwjOzw8LWMxbgYQfdcAnoDnI/EK6Dah94LX60CAtxg3A4i+GIDFxHHkA8DG
        DWOKPrIdcWPgbwfe2/BYXUU+FBmEdgcRNcbfuPy4xL2kMALqsTuDWxE1An589W0dF0mBPyvRlSKDsPRa
        j6gW6L+QmL3kR6OXFCqAfhYs1zznIxob9P8FTX69mpE/Jhl3+kwheAN0rJ2MDEoca8V2RP8IK11ITUCM
        4ZNlED+gWI7o3UHQzwm+HdEzCOxRswJ+pF37/ZYBv9YBFj3un+EnDoUbzNTsEZmLuDHwZXA/Zix236yM
        ZzMAC8iliGsDHy67Mzd4tc+2rIS3pO/LGm46qsrAhxu7v+Fc9tEzfw06uCcsVqzf5JYzUB6TocBuAXrO
        PVXFhqNP/Wuczq5Gv5I1e5m0LCZ2+VvceLS9WMztLz9gvcAq5ZVKwG8LLuPUssyvp+KjVdB2UKZog1o/
        VPwqnpj4A7g5OYcf0fWVAAAAAElFTkSuQmCC
</value>
  </data>
</root>